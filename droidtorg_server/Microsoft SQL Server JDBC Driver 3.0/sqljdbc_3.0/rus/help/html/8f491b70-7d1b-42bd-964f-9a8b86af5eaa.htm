<html DIR="LTR" xmlns:tool="http://www.microsoft.com/tooltip" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:ddue="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
  <head>
    <META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=utf-8" />
    <META NAME="save" CONTENT="history" />
    <title>Использование хранимых процедур с входными параметрами</title>
    
    <link rel="stylesheet" type="text/css" href="../local/Classic.css">
      
    </link>
    
    <script src="../local/script.js">
      
    </script><script src="../local/script_main.js">&amp;nbsp;</script>
  </head>
  <body>
    <!--Topic built:04/01/2010 05:03:29-->

    
    
    
    
    
    
    
    
    
    <div id="header">
      <table width="100%" id="topTable"><tr>
          <td align="left">
            <span id="headerBold">Использование хранимых процедур с входными параметрами</span>
          </td>
          <td align="right">
            
          </td>
        </tr></table>
      
      
      
    </div>
    <div id="mainSection">
      
        
        
    <font color="DarkGray">
      
    </font>
    <p />
    
    <p />
  
        <div id="introductionSection" class="section">
    <p>Хранимая процедура SQL Server, которую можно вызвать, содержит один или несколько параметров IN, то есть параметров, которые могут быть использованы для передачи данных в хранимую процедуру. Драйвер JDBC Microsoft SQL Server предоставляет класс <a href="a8481c06-fbba-432b-8c69-4f4619c20ad4.htm">SQLServerPreparedStatement</a>, который можно использовать для вызова этого типа хранимой процедуры и обработки возвращаемых ею данных. </p>
    <p>При использовании драйвера JDBC для вызова хранимой процедуры с параметрами IN следует использовать escape-последовательность SQL<code> call </code>вместе с методом <a href="265b024c-898a-4bd0-98b5-f06076717b9e.htm">prepareCall</a> класса <a href="937292a6-1525-423e-a2b2-a18fd34c2893.htm">SQLServerConnection</a>. Ниже приводится синтаксис escape-последовательности<code> call </code>с параметрами IN.</p>
    <p>
      <code>{call procedure-name[([parameter][,[parameter]]...)]}</code>
    </p>
    <div style="margin: .5em 1.5em .5em 1.5em"><b>Примечание. </b>
      Дополнительные сведения об escape-последовательностях SQL см. в разделе <a href="00f9e25a-088e-4ac6-aa75-43eacace8f03.htm">Использование Escape-последовательностей SQL</a>.<p />
    </div>
    <p>При создании escape-последовательности<code> call </code>укажите параметры IN при помощи символ вопросительного знака (?). Этот символ выполняет роль заполнителя для значений параметра, которые будут переданы хранимой процедуре. Чтобы указать значение для параметра, можно использовать один из методов задания из класса <b>SQLServerPreparedStatement</b>. Метод задания, который можно использовать, определяется типом данных параметра IN. </p>
    <p>Во время передачи значения методу задания следует указать не только фактическое значение, которое будет использоваться в параметре, но также порядковый номер параметра в хранимой процедуре. Например, если хранимая процедура содержит единственный параметр IN, его порядковый номер будет 1. Если хранимая процедура содержит два параметра, порядковый номер первого значения будет 1, а второго — 2.</p>
    <p>В качестве примера вызова хранимой процедуры, содержащей параметр IN, используйте хранимую процедуру uspGetEmployeeManagers в образце базы данных SQL Server 2005 AdventureWorks. Эта хранимая процедура принимает один параметр входных данных с именем EmployeeID, который является целым значением, и возвращает рекурсивный список служащих и их менеджеров на основе указанного EmployeeID. Ниже приводится код Java для вызова этой хранимой процедуры.</p>
    <div class="sampleCode"><span codeLanguage="other"><pre>public static void executeSprocInParams(Connection con) {
   try {
      PreparedStatement pstmt = con.prepareStatement("{call dbo.uspGetEmployeeManagers(?)}");
      pstmt.setInt(1, 50);
      ResultSet rs = pstmt.executeQuery();

      while (rs.next()) {
         System.out.println("EMPLOYEE:");
         System.out.println(rs.getString("LastName") + ", " + rs.getString("FirstName"));
         System.out.println("MANAGER:");
         System.out.println(rs.getString("ManagerLastName") + ", " + rs.getString("ManagerFirstName"));
         System.out.println();
      }
      rs.close();
      pstmt.close();
   }

   catch (Exception e) {
      e.printStackTrace();
    }
}</pre></span></div>
  </div><span id="seeAlsoSpan"><h1 class="heading">См. также</h1></span><div id="seeAlsoSection" class="section" name="collapseableSection"><a href="0041f9e1-09b6-4487-b052-afd636c8e89a.htm">Использование инструкций с хранимыми процедурами</a><br /><br /></div><!--[if gte IE 5]>
			<tool:tip element="seeAlsoToolTip" avoidmouse="false"/><tool:tip element="languageFilterToolTip" avoidmouse="false"/><tool:tip element="roleInfoSpan" avoidmouse="false"/>
		<![endif]-->
      <div id="footer" class="section">
        
		<hr />
		
		<span id="fb" class="feedbackcss">
			
			
		</span>
		
		<a href="9bad553b-9e70-4696-8499-2e35f772a1e0.htm">
			
			© Корпорация Майкрософт (Microsoft Corporation), 2010. Все права защищены.
		</a>
 	
	
      </div>
    </div>
  </body>
</html>