<html DIR="LTR" xmlns:tool="http://www.microsoft.com/tooltip" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:ddue="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
  <head>
    <META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=utf-8" />
    <META NAME="save" CONTENT="history" />
    <title>Использование хранимых процедур с состояниями возврата</title>
    
    <link rel="stylesheet" type="text/css" href="../local/Classic.css">
      
    </link>
    
    <script src="../local/script.js">
      
    </script><script src="../local/script_main.js">&amp;nbsp;</script>
  </head>
  <body>
    <!--Topic built:04/01/2010 05:03:29-->

    
    
    
    
    
    
    
    
    
    <div id="header">
      <table width="100%" id="topTable"><tr>
          <td align="left">
            <span id="headerBold">Использование хранимых процедур с состояниями возврата</span>
          </td>
          <td align="right">
            
          </td>
        </tr></table>
      
      
      
    </div>
    <div id="mainSection">
      
        
        
    <font color="DarkGray">
      
    </font>
    <p />
    
    <p />
  
        <div id="introductionSection" class="section">
    <p>Вызываемая хранимая процедура SQL Server — это процедура, которая возвращает параметр состояния или параметр результата. Обычно используется для указания успешного выполнения или ошибки хранимой процедуры. Драйвер JDBC Microsoft SQL Server предоставляет класс <a href="30710a63-c05d-47d9-9cf9-c087a1c76373.htm">SQLServerCallableStatement</a>, который можно использовать для вызова хранимых процедур такого вида и обработки возвращаемых ими данных.</p>
    <p>При вызове хранимой процедуры этого типа с помощью драйвера JDBC следует использовать escape-последовательность SQL <code>call</code> совместно с методом  <a href="265b024c-898a-4bd0-98b5-f06076717b9e.htm">prepareCall</a> класса <a href="937292a6-1525-423e-a2b2-a18fd34c2893.htm">SQLServerConnection</a>. Ниже приводится синтаксис escape-последовательности <code>call</code> с возвращаемыми параметрами состояния:</p>
    <p>
      <code>{[?=]call procedure-name[([parameter][,[parameter]]...)]}</code>
    </p>
    <div style="margin: .5em 1.5em .5em 1.5em"><b>Примечание. </b>
      Дополнительные сведения об escape-последовательностях SQL см. в разделе <a href="00f9e25a-088e-4ac6-aa75-43eacace8f03.htm">Использование Escape-последовательностей SQL</a>.<p />
    </div>
    <p>При создании escape-последовательности<code> call </code> укажите возвращаемые параметры состояния при помощи символа "?" (символ вопросительного знака (?)). Этот символ выполняет роль заполнителя для значения параметра, которое будет возвращено из хранимой процедуры. Чтобы указать значения возвращаемого параметра состояния, необходимо указать тип данных параметра с помощью метода <a href="82f8d608-efc1-4af8-a985-ec25d19420aa.htm">registerOutParameter</a> класса <b>SQLServerCallableStatement</b> до выполнения хранимой процедуры. </p>
    <div style="margin: .5em 1.5em .5em 1.5em"><b>Примечание. </b>
      При использовании драйвера с базой данных SQL Server значение, указываемое для возвращаемого параметра состояния в методе  <b>registerOutParameter</b>, всегда будет целым числом, которое можно указать с помощью типа данных java.sql.Types.INTEGER.<p />
    </div>
    <p>Также при передаче значения методу <b>registerOutParameter</b> для возвращаемого параметра состояния необходимо указать не только тип данных, который будет использоваться для параметра, но также порядковое размещение параметра в вызове хранимой процедуре. Порядковое местоположение возвращаемого параметра состояния всегда будет 1, поскольку этот параметр всегда является первым в вызове в хранимой процедуры. Хотя класс <b>SQLServerCallableStatement</b> обеспечивает поддержку использования имени параметра для указания определенного параметра, для возвращаемых параметров состояния можно использовать только номер порядкового местоположения.</p>
    <p>Для примера создайте следующую хранимую процедуру в образце базы данных SQL Server 2005 AdventureWorks.</p>
    <div class="sampleCode"><span codeLanguage="other"><pre>CREATE PROCEDURE CheckContactCity
   (@cityName CHAR(50))
AS
BEGIN
   IF ((SELECT COUNT(*)
   FROM Person.Address
   WHERE City = @cityName) &gt; 1)
   RETURN 1
ELSE
   RETURN 0
END</pre></span></div>
    <p>Эта хранимая процедура возвращает значение состояния 1 или 0, в зависимости от того, включен ли город, указанный в параметре cityName, в таблицу Person.Address.</p>
    <p>В следующем примере открытое подключение к образцу базы данных AdventureWorks передается в функцию, а метод <a href="e1367f39-23d7-4e26-b160-6d988d7e6988.htm">execute</a> используется для вызова хранимой процедуры CheckContactCity.</p>
    <div class="sampleCode"><span codeLanguage="other"><pre>public static void executeStoredProcedure(Connection con) {
   try {
      CallableStatement cstmt = con.prepareCall("{? = call dbo.CheckContactCity(?)}");
      cstmt.registerOutParameter(1, java.sql.Types.INTEGER);
      cstmt.setString(2, "Atlanta");
      cstmt.execute();
      System.out.println("RETURN STATUS: " + cstmt.getInt(1));
      cstmt.close();
   }
   catch (Exception e) {
      e.printStackTrace();
   }
}
</pre></span></div>
  </div><span id="seeAlsoSpan"><h1 class="heading">См. также</h1></span><div id="seeAlsoSection" class="section" name="collapseableSection"><a href="0041f9e1-09b6-4487-b052-afd636c8e89a.htm">Использование инструкций с хранимыми процедурами</a><br /><br /></div><!--[if gte IE 5]>
			<tool:tip element="seeAlsoToolTip" avoidmouse="false"/><tool:tip element="languageFilterToolTip" avoidmouse="false"/><tool:tip element="roleInfoSpan" avoidmouse="false"/>
		<![endif]-->
      <div id="footer" class="section">
        
		<hr />
		
		<span id="fb" class="feedbackcss">
			
			
		</span>
		
		<a href="9bad553b-9e70-4696-8499-2e35f772a1e0.htm">
			
			© Корпорация Майкрософт (Microsoft Corporation), 2010. Все права защищены.
		</a>
 	
	
      </div>
    </div>
  </body>
</html>