<html DIR="LTR" xmlns:tool="http://www.microsoft.com/tooltip" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:ddue="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
  <head>
    <META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=utf-8" />
    <META NAME="save" CONTENT="history" />
    <title>Общие сведения о преобразованиях типов данных</title>
    
    <link rel="stylesheet" type="text/css" href="../local/Classic.css">
      
    </link>
    
    <script src="../local/script.js">
      
    </script><script src="../local/script_main.js">&amp;nbsp;</script>
  </head>
  <body>
    <!--Topic built:04/01/2010 05:03:29-->

    
    
    
    
    
    
    
    
    
    <div id="header">
      <table width="100%" id="topTable"><tr>
          <td align="left">
            <span id="headerBold">Общие сведения о преобразованиях типов данных</span>
          </td>
          <td align="right">
            
          </td>
        </tr></table>
      
      
      
    </div>
    <div id="mainSection">
      
        
        
    <font color="DarkGray">
      
    </font>
    <p />
    
    <p />
  
        <div id="introductionSection" class="section">
    <p>Чтобы облегчить преобразование типов данных языка программирования Java в типы данных SQL Server, драйвер JDBC Microsoft SQL Server предоставляет функции преобразования типов данных в соответствии с требованиями JDBC. Повышенная гибкость обеспечивается тем, что следующие типы данных можно преобразовывать в прямом и обратном направлениях: <b>Object</b>, <b>String</b> и <b>byte[]</b>. </p>
  </div><h1 class="heading">Преобразование метода считывания</h1><div id="sectionSection0" class="section"><content xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
      <p xmlns="">Исходя из типов данных SQL Server на следующей диаграмме показана схема преобразования для драйвера JDBC для методов <b>get&lt;Type&gt;()</b> класса <a href="eaffcff1-286c-459f-83da-3150778480c9.htm">SQLServerResultSet</a>, а также поддерживаемое преобразование для методов <b>get&lt;Type&gt;</b> класса <a href="30710a63-c05d-47d9-9cf9-c087a1c76373.htm">SQLServerCallableStatement</a>.</p>
      <div xmlns=""><img src="../local/a01384f7-3912-4a57-beca-eb876955c6f6.gif" target="_blank" alt="JDBCGetterConversions" /></div>
      <p xmlns="">Преобразования, поддерживаемые методами считывания драйвера JDBC, делятся на три категории.</p>
      <ul xmlns=""><li>
          
            <b>Без потерь (x)</b>. Преобразования для случаев, когда тип метода считывания является таким же или меньшим, чем базовый тип сервера. Например, при вызове метода <b>getBigDecimal</b> для базового десятичного столбца сервера преобразование не потребуется.<br />
        </li><li>
          
            <b>С преобразованием (y)</b>. Преобразования из числовых типов сервера в типы языка Java, когда преобразование осуществляется стандартным образом и отвечает правилам преобразования языка Java. Для этих видов преобразования точность всегда усекается (никогда не округляется), а переполнение обрабатывается как остаток от деления на тип назначения, который меньше по размеру. Например, вызов метода <b>getInt</b> для базового столбца <b>decimal</b>, который содержит значение «1,9999», вернет значение «1», а если базовое значение <b>decimal</b> равно «3000000000», то произойдет переполнение значения <b>int</b> и результат будет равен «-1294967296».<br />
        </li><li>
          
            <b>В зависимости от данных (z)</b>. Для преобразования из базовых символьных типов в числовые типы требуется, чтобы символьные типы содержали значения, которые могут быть преобразованы в данный тип. Никакие другие преобразования не выполняются. Если значение слишком велико для метода считывания, то оно является недопустимым. Например, если вызывается метод <b>getInt</b> относительно столбца varchar(50), который содержит значение «53», значение возвращается в виде <b>int</b>, однако, если базовое значение ― «xyz» или «3000000000», возникает ошибка.<br />
        </li></ul>
      <p xmlns="">Если вызывается метод <b>getString</b> относительно типа данных столбца <b>binary</b>, <b>varbinary</b>, <b>varbinary(max)</b> или <b>image</b>, значение возвращается в виде шестнадцатеричного значения строки.</p>
    </content></div><h1 class="heading">Преобразование метода обновления</h1><div id="sectionSection1" class="section"><content xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
      <p xmlns="">Для данных на языке Java, передаваемых методам <b>update&lt;Type&gt;()</b> класса <a href="eaffcff1-286c-459f-83da-3150778480c9.htm">SQLServerResultSet</a>, применяются следующие виды преобразования.</p>
      <div xmlns=""><img src="../local/104cb32d-a90c-4bcb-97de-e6907a0efe99.gif" target="_blank" alt="JDBCUpdaterConversions" /></div>
      <p xmlns="">Преобразования, поддерживаемые методами обновления драйвера JDBC, делятся на три категории.</p>
      <ul xmlns=""><li>
          
            <b>Без потерь (x)</b>. Преобразования для случаев, когда тип обновления является таким же или меньшим, чем базовый тип сервера. Например, при вызове метода <b>updateBigDecimal</b> для базового десятичного столбца сервера преобразование не потребуется.<br />
        </li><li>
          
            <b>С преобразованием (y)</b>. Преобразования из числовых типов сервера в типы языка Java, когда преобразование осуществляется стандартным образом и отвечает правилам преобразования языка Java. Для этих видов преобразования точные значения всегда усекаются (и никогда не округляются), а при переполнении значение сокращается по модулю размера типа назначения (меньшего). Например, вызов метода <b>updateDecimal</b> для базового столбца <b>int</b>, который содержит значение «1,9999», вернет значение «1», а если базовое значение <b>decimal</b> равно «3000000000», то произойдет переполнение значения <b>int</b> и результат будет равен «-1294967296».<br />
        </li><li>
          
            <b>В зависимости от данных (z)</b>. Для преобразования из типов данных базового источника в типы данных назначения требуется, чтобы содержащиеся значения могли быть преобразованы в типы назначения. Никакие другие преобразования не выполняются. Если значение слишком велико для метода считывания, то оно является недопустимым. Например, если метод <b>updateString</b> с аргументом «53» вызывается относительно столбца типа int, обновление завершается успешно, однако, если значение исходной строки ― «foo» или «3000000000», возникает ошибка.<br />
        </li></ul>
      <p xmlns="">Если вызывается метод <b>updateString</b> относительно типа данных столбца <b>binary</b>, <b>varbinary</b>, <b>varbinary(max)</b> или <b>image</b>, значение строки обрабатывается как шестнадцатеричное значение строки.</p>
      <p xmlns="">Если столбец SQL Server имеет тип данных <b>XML</b>, то значение данных должно быть допустимым <b>XML</b>. При вызове методов <b>updateBytes</b>, <b>updateBinaryStream</b> и <b>updateBlob</b> значение данных должно быть шестнадцатеричным представлением для строки XML-символов. Например: </p>
      <div class="sampleCode" xmlns=""><span codeLanguage="other"><pre>&lt;hello&gt;world&lt;/hello&gt; = 0x3C68656C6C6F3E776F726C643C2F68656C6C6F3E </pre></span></div>
      <p xmlns="">Обратите внимание, что метка следования байтов (BOM) является обязательной, если XML-символы имеют определенную кодировку.</p>
    </content></div><h1 class="heading">Преобразование метода задания</h1><div id="sectionSection2" class="section"><content xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
      <p xmlns="">Для данных на языке Javа, передаваемых методам <b>set&lt;Type&gt;()</b> класса <a href="a8481c06-fbba-432b-8c69-4f4619c20ad4.htm">SQLServerPreparedStatement</a> и класса <a href="30710a63-c05d-47d9-9cf9-c087a1c76373.htm">SQLServerCallableStatement</a> применяются следующие виды преобразования.</p>
      <div xmlns=""><img src="../local/fe289363-9e70-4c8d-88bc-51e959ed9755.gif" target="_blank" alt="JDBCSetterConversions" /></div>
      <p xmlns="">Сервер проверяет любые виды преобразования и возвращает ошибку при неудачном завершении.</p>
      <p xmlns="">Если это тип данных <b>String</b> и значение превышает длину <b>VARCHAR</b>, то оно сопоставляется с типом <b>LONGVARCHAR</b>. Аналогичным образом тип данных <b>NVARCHAR</b> сопоставляется с типом данных <b>LONGNVARCHAR</b>, если его длина превышает поддерживаемую длину <b>NVARCHAR</b>. То же относится и к значениям <b>byte[]</b>. Значения длиннее <b>VARBINARY</b> становятся <b>LONGVARBINARY</b>.</p>
      <p xmlns="">Преобразования, поддерживаемые методами задания драйвера JDBC, делятся на три категории.</p>
      <ul xmlns=""><li>
          
            <b>Без потерь (x)</b>. Преобразования для числовых случаев, когда тип задания является таким же или меньшим, чем базовый тип сервера. Например, при вызове метода <b>setBigDecimal</b> для базового серверного столбца <b>decimal</b> преобразование не потребуется. В случае преобразования числовых данных в символьные тип данных Java <b>numeric</b> преобразуется в <b>String</b>. Например, вызов метода <b>setDouble</b> со значением «53» относительно столбца varchar(50), формирует символьное значение «53» в столбце назначения.<br />
        </li><li>
          
            <b>С преобразованием (y)</b>. Преобразования из типа Java <b>numeric</b> в базовый тип сервера <b>numeric</b>, меньший по размеру. Такое преобразование выполняется обычным образом и следует соглашениям о преобразованиях в SQL Server. Точные значения всегда усекаются (никогда не округляются), а переполнение выводит ошибку неподдерживаемого преобразования. Например, вызов метода <b>updateDecimal</b> со значением «1,9999» для базового целочисленного столбца приводит к сохранению в целевом столбце значения «1», однако, если будет передано значение «3000000000», драйвер выдаст ошибку.<br />
        </li><li>
          
            <b>В зависимости от данных (z)</b>. Преобразования из типа Java <b>String</b> в базовый тип данных SQL Server зависят от следующих условий. Драйвер отправляет значение <b>String</b> на SQL Server, а SQL Server выполняет преобразование при необходимости. Если свойство <b>sendStringParametersAsUnicode</b> имеет значение true, а базовым типом данных SQL Server является <b>image</b>, то SQL Server не выполнит преобразование <b>nvarchar</b> в <b>image</b> и сформирует исключение <b>SQLServerException</b>. Если свойство sendStringParametersAsUnicode имеет значение false, а базовым типом данных SQL Server является <b>image</b>, то SQL Server выполнит преобразование <b>varchar</b> в <b>image</b> и не вызовет исключения.<br />
        </li></ul>
      <p xmlns="">
        SQL Server выполняет преобразования и передает ошибки обратно драйверу JDBC, если возникают проблемы.</p>
      <p xmlns="">Если столбец SQL Server имеет тип данных <b>XML</b>, то значение данных должно быть допустимым <b>XML</b>. При вызове методов <b>updateBytes</b>, <b>updateBinaryStream</b> и <b>updateBlob</b> значение данных должно быть шестнадцатеричным представлением для строки XML-символов. Например: </p>
      <div class="sampleCode" xmlns=""><span codeLanguage="other"><pre>&lt;hello&gt;world&lt;/hello&gt; = 0x3C68656C6C6F3E776F726C643C2F68656C6C6F3E </pre></span></div>
      <p xmlns="">Обратите внимание, что метка следования байтов (BOM) является обязательной, если XML-символы имеют определенную кодировку.</p>
    </content></div><h1 class="heading">Преобразование относительно setObject</h1><div id="sectionSection3" class="section"><content xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
      <p xmlns="">Для данных на языке Java, передаваемых методам <b>setObject(&lt;Type&gt;)</b> класса <a href="a8481c06-fbba-432b-8c69-4f4619c20ad4.htm">SQLServerPrepareStatement</a>, применяются следующие виды преобразования. </p>
      <div xmlns=""><img src="../local/92cdf5f9-afdf-4a92-b1ea-204a7d93b8a5.gif" target="_blank" alt="JDBCSetObjectConversions" /></div>
      <p xmlns="">Метод <b>setObject</b> с неуказанным типом назначения использует сопоставление по умолчанию. Если это тип данных <b>String</b> и значение превышает длину <b>VARCHAR</b>, то оно сопоставляется с типом <b>LONGVARCHAR</b>. Аналогичным образом тип данных <b>NVARCHAR</b> сопоставляется с типом данных <b>LONGNVARCHAR</b>, если его длина превышает поддерживаемую длину <b>NVARCHAR</b>. То же относится и к значениям <b>byte[]</b>. Значения длиннее <b>VARBINARY</b> становятся <b>LONGVARBINARY</b>.</p>
      <p xmlns="">Преобразования, поддерживаемые методами setObject драйвера JDBC, делятся на три категории.</p>
      <ul xmlns=""><li>
          
            <b>Без потерь (x)</b>. Преобразования для числовых случаев, когда тип задания является таким же или меньшим, чем базовый тип сервера. Например, при вызове метода <b>setBigDecimal</b> для базового серверного столбца <b>decimal</b> преобразование не потребуется. В случае преобразования числовых данных в символьные тип данных Java <b>numeric</b> преобразуется в <b>String</b>. Например, вызов метода <b>setDouble</b> со значением «53» относительно столбца varchar(50) формирует символьное значение «53» в столбце назначения.<br />
        </li><li>
          
            <b>С преобразованием (y)</b>. Преобразования из типа Java <b>numeric</b> в базовый тип сервера <b>numeric</b>, меньший по размеру. Такое преобразование выполняется обычным образом и следует соглашениям о преобразованиях в SQL Server. Точные значения всегда усекаются и никогда не округляются, а при переполнении возникает ошибка неподдерживаемого преобразования. Например, вызов метода <b>updateDecimal</b> со значением «1,9999» для базового целочисленного столбца приводит к сохранению в целевом столбце значения «1», однако если будет передано значение «3000000000», драйвер выдаст ошибку.<br />
        </li><li>
          
            <b>В зависимости от данных (z)</b>. Преобразования из типа Java <b>String</b> в базовый тип данных SQL Server зависят от следующих условий. Драйвер отправляет значение <b>String</b> на SQL Server, а SQL Server выполняет преобразование при необходимости. Если свойство соединения <b>sendStringParametersAsUnicode</b> имеет значение true, а базовым типом данных SQL Server является <b>image</b>, то SQL Server не выполнит преобразование <b>nvarchar</b> в <b>image</b> и сформирует исключение SQLServerException. Если свойство <b>sendStringParametersAsUnicode</b> имеет значение false, а базовым типом данных SQL Server является <b>image</b>, то SQL Server выполнит преобразование <b>varchar</b> в <b>image</b> и не вызовет исключения.<br />
        </li></ul>
      <p xmlns="">
        SQL Server выполняет ряд заданных преобразований и передает ошибки обратно драйверу JDBC, если возникают проблемы. Преобразование на стороне клиента является исключением и выполняется только в случае значений <b>date</b>, <b>time</b>, <b>timestamp</b>, <b>Boolean</b> и <b>String</b>.</p>
      <p xmlns="">Если столбец SQL Server имеет тип данных <b>XML</b>, то значение данных должно быть допустимым <b>XML</b>. При вызове методов setObject(byte[], SQLXML), setObject(inputStream, SQLXML) или setObject(Blob, SQLXML) значение данных должно быть шестнадцатеричным представлением для строки XML-символов. Например: </p>
      <div class="sampleCode" xmlns=""><span codeLanguage="other"><pre>&lt;hello&gt;world&lt;/hello&gt; = 0x3C68656C6C6F3E776F726C643C2F68656C6C6F3E </pre></span></div>
      <p xmlns="">Обратите внимание, что метка следования байтов (BOM) является обязательной, если XML-символы имеют определенную кодировку.</p>
    </content></div><span id="seeAlsoSpan"><h1 class="heading">См. также</h1></span><div id="seeAlsoSection" class="section" name="collapseableSection"><a href="7802328d-4d23-4775-9573-4169b127d258.htm">Основные сведения о типах данных драйвера JDBC</a><br /><br /></div><!--[if gte IE 5]>
			<tool:tip element="seeAlsoToolTip" avoidmouse="false"/><tool:tip element="languageFilterToolTip" avoidmouse="false"/><tool:tip element="roleInfoSpan" avoidmouse="false"/>
		<![endif]-->
      <div id="footer" class="section">
        
		<hr />
		
		<span id="fb" class="feedbackcss">
			
			
		</span>
		
		<a href="9bad553b-9e70-4696-8499-2e35f772a1e0.htm">
			
			© Корпорация Майкрософт (Microsoft Corporation), 2010. Все права защищены.
		</a>
 	
	
      </div>
    </div>
  </body>
</html>